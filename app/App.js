/**
 * Sample React Native App
 * https://github.com/facebook/react-native
 * @flow
 */

import React, { Component } from "react";
import { Platform, StyleSheet, Text, View } from "react-native";
import PushNotification from "react-native-push-notification";

export default class App extends Component<Props> {
  constructor() {
    super();
    PushNotification.configure({
      // (optional) Called when Token is generated (iOS and Android)
      onRegister: function(token) {
        console.log("TOKEN:", token);
      },

      // (required) Called when a remote or local notification is opened or received
      onNotification: function(notification) {
        console.log("NOTIFICATION:", notification);
      },

      // IOS ONLY (optional): default: all - Permissions to register.
      permissions: {
        alert: true,
        badge: true,
        sound: true
      },

      // Should the initial notification be popped automatically
      // default: true
      popInitialNotification: true,

      /**
       * (optional) default: true
       * - Specified if permissions (ios) and token (android and ios) will requested or not,
       * - if not, you must call PushNotificationsHandler.requestPermissions() later
       */
      requestPermissions: true
    });
  }
  componentWillMount() {
    PushNotification.localNotificationSchedule({
      /* Android Only Properties */
      id: "0", // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
      ticker: "SET REMINDER", // (optional)
      autoCancel: true, // (optional) default: true
      largeIcon: "ic_launcher", // (optional) default: "ic_launcher"
      smallIcon: "ic_notification", // (optional) default: "ic_notification" with fallback for "ic_launcher"
      bigText: "See More", // (optional) default: "message" prop
      subText: "more about reminder", // (optional) default: none
      vibrate: true, // (optional) default: true
      vibration: 300, // vibration length in milliseconds, ignored if vibrate=false, default: 1000
      tag: "#my_sleep_time", // (optional) add tag to message
      group: "group", // (optional) add group to message
      ongoing: false, // (optional) set whether this is an "ongoing" notification

      /* iOS and Android properties */
      title: "Reminder", // (optional, for iOS this is only used in apple watch, the title will be the app name on other iOS devices)
      message: "Hi I am your Notification", // (required)
      number: "10", // (optional) Valid 32 bit integer specified as string. default: none (Cannot be zero)
      permissions: {
        alert: true,
        badge: true,
        sound: true
      },
      playSound: true, // (optional) default: true
      color: "green", // (optional) default: system default
      date: new Date(Date.now() + 60 * 1000), // in 60 secs
      soundName: "default"
      //  soundName: "android.resource://com.app/raw/sound", // (optional) Sound to play when the notification is shown. Value of 'default' plays the default sound. It can be set to a custom sound such as 'android.resource://com.xyz/raw/my_sound'. It will look for the 'my_sound' audio file in 'res/raw' directory and play it. default: 'default' (default sound is played)
    });
  }
  render() {
    return (
      <View style={styles.container}>
        <Text style={styles.welcome}>PUSH NOTIFICATIONS</Text>
        <Text style={styles.instructions}>
          you will get notification within 60 secs
        </Text>
      </View>
    );
  }
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: "center",
    alignItems: "center",
    backgroundColor: "#F5FCFF"
  },
  welcome: {
    fontSize: 20,
    textAlign: "center",
    margin: 10
  },
  instructions: {
    fontSize: 16,
    textAlign: "center",
    margin: 15
  }
});
